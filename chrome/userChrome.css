:root {
	--menu-bg: #2A2A2A;
	--menu-text: #FFFFFF;
	--menu-text-inverted: #000000;
	--menu-text-disabled-inverted: #BBBBBB;
	--menu-filter: invert(90%) hue-rotate(180deg) brightness(120%);
	--menu-unfilter-image: invert(90%) hue-rotate(180deg) saturate(120%);
	--full-invert-filter: invert(100%) hue-rotate(180deg);
	--bg-textbox: #010101;
	
	--collections-bg: #1F2023;
	
	--items-bg: #27292D;
	
	--bg-overflow: #010101;
	--bg-base: #1F2023;
	--bg-surface: #27292D;
	--bg-overlay-dark: #2D2F34;
	--bg-overlay-light: #383B40;
	
	--hover-blue: #2c618e;
	--selected-blue: #0078d7;
	--hover-border-blue: #7bc3ff;

	/* todo: preferences -> advanced -> files and folders, feeds */
}

/*
  General Styles
*/
window, page, dialog, wizard, prefpane {
	background: var(--menu-bg) !important;
	color: var(--menu-text) !important;
}
tabpanels, tab[selected=true]{
	-moz-appearance: none !important;
	background: var(--bg-overlay-dark) !important;
	color: var(--menu-text) !important;
}
tab:not([selected=true]) {
	-moz-appearance: none !important;
	background: var(--bg-base) !important;
	color: var(--menu-text) !important;
}
button, menulist{
	filter: invert(100%) hue-rotate(180deg);
}
textbox, textarea, filefield, input, checkbox image, radiogroup image {
	filter: invert(88.3%) hue-rotate(180deg);
}
scrollbar {
	filter: invert(100%);
}
scrollbar thumb {
	filter: brightness(80%); 
}
caption{
	background: var(--menu-bg) !important;
	color: var(--menu-text) !important;
}
/* checkbox image{
	filter: invert(100%) hue-rotate(180deg);
} */
tree treechildren{
	background: var(--items-bg);
	color: var(--menu-text); 
}
tree treechildren::-moz-tree-row(hover){
	background: var(--hover-blue) !important;
	border: var(--hover-border-blue) 1px solid !important;
}
tree treechildren::-moz-tree-cell(selected){
	background: var(--selected-blue) !important;
}
tree treechildren::-moz-tree-cell-text(selected){
	color: var(--menu-text) !important;
}
tree treecol {
	filter: var(--menu-filter);
}
tree treecol > image {
	filter: var(--menu-unfilter-image);
}
tree treecolpicker{
	filter: var(--menu-filter);
}
/* Need to override for preferences */
tabpanels groupbox caption {
	-moz-appearance: none !important;
	background: var(--bg-overlay-dark) !important;
	color: var(--menu-text) !important;
}

/* 
  Navigation bar (File, Edit menu...) 
*/
#navigator-toolbox{
	background: var(--menu-bg);
	color: var(--menu-text);
}
/* inverting filter hack to style elements I couldn't access otherwise */
menupopup {
	filter: var(--menu-filter);
}
menupopup image {
	filter: var(--menu-unfilter-image);
}
menubar > menu {
	color: var(--menu-text);
}
menupopup menuitem:not([disabled=true]) {
	color: var(--menu-text-inverted)
}
menupopup menuitem[disabled=true] {
	color: var(--menu-text-disabled-inverted)
}
/* Set the selection colour to gray */
/* menupopup menuitem[_moz-menuactive], menupopup menu[_moz-menuactive] {
	filter: saturate(0);
} */


/*
  Zotero toolbar (New collection, new library, new item buttons)
*/
#zotero-toolbar{
	background: var(--menu-bg);
	color: var(--menu-text);
	border: 0px !important; /* overwritten if not important */
}
dropmarker{
	filter: invert(100%) brightness(120%);
}
/* Invert the "All Field & Tags" search bar */
#zotero-tb-search{
	filter: var(--menu-filter);
}
#zotero-lookup-panel{
	filter: invert(85%) hue-rotate(180deg) brightness(120%);
}
/* todo: */
/* Fix this -- selector doesn't work... */
tooltip{
	filter: invert(100%) !important;
}


/*
  Zotero Collections Pane (My Library, ...)
*/
.tag-selector-list-container {
	background: var(--collections-bg) !important;
	color: var(--menu-text); 
}
/* Can't easily select the scrollbar, only as a child of .tag-selector-list */
.tag-selector-list{
	filter: invert(100%);
}
.tag-selector-list > div{
	filter: invert(100%);
}
.tag-selector-filter-container{
	background: var(--collections-bg);
	color: var(--menu-text); 
}
.tag-selector-filter-container > .tag-selector-actions > .icon-downchevron {
	filter: invert(100%) brightness(120%);
}
.tag-selector-filter-container > .search {
	filter: var(--menu-filter);
}
/* todo: */
/* hover for collection tree items */
/* hover for each tag... */
.tag-selector-item:hover{
	background: var(--hover-blue) !important;
}
.tag-selector-item.selected{
	background: var(--selected-blue) !important;
}
.tag-selector-item.disabled{
	opacity: 0.4 !important;
}
.tag-selector-list-container > div > div{
	padding-bottom: 10px;
	padding-right: 10px;
}

/*
  Zotero Items Pane (main section in the middle)
*/
/* #zotero-items-columns-header splitter{
	display: none;
} */



/*
  Zotero Item Pane (details about the selected item)
*/
#zotero-item-pane, #zotero-item-pane-content {
	background: var(--items-bg);
  color: var(--menu-text); 
}
#zotero-view-item {
	background: var(--collections-bg) !important;
	color: white !important;
	border: 0px !important;
}
#item-type-menu {
	color: white !important;
}
.creator-type-label > image{
	filter: invert(100%) brightness(120%);
}
#zotero-editpane-tabs tab{
	-moz-appearance: none !important;
	background: var(--items-bg) !important;
	color: white !important;
	border: 4px white !important;
}
#zotero-editpane-tabs tab[selected="true"]{
	color: white !important;
	border-bottom: 1px white !important;
	background: var(--collections-bg) !important;
}
#zotero-editpane-tabs tab:hover{
	background: #555 !important;
}
.tags-box-list .tag .editable .input{
	filter: var(--full-invert-filter);
}
/* Invert the suggestions text back to white */
.tags-box-list .tag .editable ul[role=listbox] li[role=option]{
	filter: var(--full-invert-filter);
}
/* fix border */
#zotero-view-item textbox{
	-moz-appearance: none !important;
	background: var(--collections-bg) !important;
	color: white !important;
	border: 4px !important;
}

/* 
  Zotero Note Editor
*/
zoteronoteeditor #noteField{
	filter: var(--menu-filter);
}
#zotero-note-window {
	background: var(--menu-bg) !important;
}
#zotero-note-window zoteronoteeditor #links-box{
	color: white !important;
}
#tagsPopup button{
	filter: none;
}

/*
  Preferences Menu
*/
.prefWindow-dlgbuttons{
	background: var(--menu-bg) !important;
}
.paneSelector{
	filter: var(--menu-filter);
}
.paneSelector image{
	filter: var(--menu-unfilter-image);
}
